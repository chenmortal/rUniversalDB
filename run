#!/bin/bash

readonly NUM_SLAVES_GROUPS=2 # Tune this
readonly NUM_SLAVES=$((5 * $NUM_SLAVES_GROUPS))

if [ "$1" = "setup" ]; then
  # This should be run once after installing docker to create the docker
  # network, the base image, etc.
  docker network create --subnet=172.19.0.0/16 runiversal-net
  docker build -t runiversal -f Dockerfile.init .
  docker build -t runiversal .
elif [ "$1" = "build" ]; then
  docker build -t runiversal .
elif [ "$1" = "client_init" ]; then
  # Start the image by running the client, but only to initialize the Master Group.
  docker run --cap-add=NET_ADMIN -it --name=rclient --ip 172.19.0.2 --network=runiversal-net runiversal scripts/client -i 172.19.0.2 -m '172.19.0.10 172.19.0.11 172.19.0.12 172.19.0.13 172.19.0.14';
  # After we exit the terminal, clean up the container.
  docker container rm rclient;
elif [ "$1" = "client" ]; then
  # Start the image by running the client, and start an interactive terminal.
  docker run --cap-add=NET_ADMIN -it --name=rclient --ip 172.19.0.2 --network=runiversal-net runiversal scripts/client -i 172.19.0.2 -e 172.19.0.10;
  # After we exit the terminal, clean up the container.
  docker container rm rclient;
elif [ "$1" = "masters" ]; then
  # Start the image by running transact, and have it be in the background.
  for ((i = 10; i < 15; i++)); do
    CONTAINER_NAME="runiversal${i}";
    docker run --cap-add=NET_ADMIN -d --name="${CONTAINER_NAME}" --ip 172.19.0."${i}" --network=runiversal-net runiversal scripts/transact -i 172.19.0."${i}" -t masterbootup &
  done
  wait
elif [ "$1" = "slaves" ]; then
  # Start the image by running transact, and have it be in the background.
  for ((i = 15; i < $((15 + $NUM_SLAVES)); i++)); do
    CONTAINER_NAME="runiversal${i}";
    docker run --cap-add=NET_ADMIN -d --name="${CONTAINER_NAME}" --ip 172.19.0."${i}" --network=runiversal-net runiversal scripts/transact -i 172.19.0."${i}" -t freenode -f newslave -e 172.19.0.10 &
  done
  wait
elif [ "$1" = "clean" ]; then
  CONTAINERS="rclient";
  for ((i = 10; i < $((15 + $NUM_SLAVES)); i++)); do
    CONTAINERS="${CONTAINERS} runiversal${i}";
  done
  docker kill ${CONTAINERS} 2>/dev/null;
  docker container rm ${CONTAINERS} 2>/dev/null;
elif [ "$1" = "mclean" ]; then
  CONTAINERS="";
  for ((i = 10; i < 15; i++)); do
    CONTAINERS="${CONTAINERS} runiversal${i}";
  done
  docker kill ${CONTAINERS} 2>/dev/null;
  docker container rm ${CONTAINERS} 2>/dev/null;
elif [ "$1" = "sclean" ]; then
  CONTAINERS="";
  for ((i = 15; i < $((15 + $NUM_SLAVES)); i++)); do
    CONTAINERS="${CONTAINERS} runiversal${i}";
  done
  docker kill ${CONTAINERS} 2>/dev/null;
  docker container rm ${CONTAINERS} 2>/dev/null;
elif [ "$1" = "test" ]; then
  cargo run --release --bin simtest -- -i 8 -r 80
elif [ "$1" = "bench" ]; then
  cargo run --release --bin simtest -- -i 4 -r 8
else
  echo "unrecognized command: ${1}"
fi
