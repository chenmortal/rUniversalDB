#!/bin/bash

if [ "$1" = "build" ]; then
  docker build -t runiversal .
elif [ "$1" = "client" ]; then
  # Start the image by running the client, and start an interactive terminal.
  docker run -it --name=rclient --ip 172.19.0.2 --network=runiversal-net runiversal target/debug/client -i 172.19.0.2;
  # After we exit the terminal, clean up the container.
  docker container rm rclient;
elif [ "$1" = "masters" ]; then
  # Start the image by running transact, and have it be in the background.
  for i in {10..14}
  do
    CONTAINER_NAME="runiversal${i}";
    docker run -d --name="${CONTAINER_NAME}" --ip 172.19.0."${i}" --network=runiversal-net runiversal target/debug/transact -i 172.19.0."${i}" -t masterbootup;
  done
elif [ "$1" = "slaves" ]; then
  # Start the image by running transact, and have it be in the background.
  for i in {15..34}
  do
    CONTAINER_NAME="runiversal${i}";
    docker run -d --name="${CONTAINER_NAME}" --ip 172.19.0."${i}" --network=runiversal-net runiversal target/debug/transact -i 172.19.0."${i}" -t freenode -f newslave;
  done
elif [ "$1" = "clean" ]; then
  CONTAINERS="rclient";
  for i in {10..34}
  do
    CONTAINERS="${CONTAINERS} runiversal${i}";
  done
  docker kill "${CONTAINERS}" 2>/dev/null;
  docker container rm "${CONTAINERS}" 2>/dev/null;
elif [ "$1" = "mclean" ]; then
  CONTAINERS="";
  for i in {10..14}
  do
    CONTAINERS="${CONTAINERS} runiversal${i}";
  done
  docker kill "${CONTAINERS}" 2>/dev/null;
  docker container rm "${CONTAINERS}" 2>/dev/null;
fi
